for(ii in 6:8) hist(all.quant.data[, ii],   main = colnames(all.quant.data[ii]),   breaks = no.breaks)
for(ii in 6:8) hist(plant.quant.data[, ii], main = colnames(plant.quant.data[ii]), breaks = no.breaks)
library(ggplot2)
t = all.quant.data[,"t"]; vol = all.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
all.quant.data = all.quant.data[all.quant.data[,"d2t"] < 30, ]
all.quant.data
library(ggplot2)
t = all.quant.data[,"t"]; vol = all.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
t = plant.quant.data[,"t"]; vol = all.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
t = all.quant.data[,"t"]; vol = all.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
t = all.quant.data[,"t"]; expr = all.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
t = plant.quant.data[,"t"]; expr = plant.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
t = all.quant.data[,"t"]; expr = all.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
all.quant.data = all.quant.data[all.quant.data[,"d2t"] < 10, ]
library(ggplot2)
t = all.quant.data[,"t"]; vol = all.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
t = plant.quant.data[,"t"]; vol = plant.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
t = all.quant.data[,"t"]; vol = all.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
t = plant.quant.data[,"t"]; vol = plant.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
t = all.quant.data[,"t"]; expr = all.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
t = plant.quant.data[,"t"]; expr = plant.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
all.quant.data = all.quant.data[all.quant.data[,"d2t"] < 5, ]
t = all.quant.data[,"t"]; expr = all.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
t = plant.quant.data[,"t"]; expr = plant.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
all.quant.data
all.quant.data = all.quant.data[all.quant.data[,"d2t"] < 2, ]
t = all.quant.data[,"t"]; vol = all.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
t = plant.quant.data[,"t"]; vol = plant.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
t = all.quant.data[,"t"]; vol = all.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
t = all.quant.data[,"t"]; expr = all.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
t = plant.quant.data[,"t"]; expr = plant.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
plant.quant.data
plant.quant.data = plant.quant.data[plant.quant.data[,"d2t"] < 2, ]
all.quant.data = all.quant.data[all.quant.data[,"d2t"] < 2, ]
plant.quant.data = plant.quant.data[plant.quant.data[,"d2t"] < 2, ]
library(ggplot2)
t = all.quant.data[,"t"]; vol = all.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
t = plant.quant.data[,"t"]; vol = plant.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
plant.quant.data = lapply(quant.data, function(x) do.call(rbind, x))
plant.quant.data
all.quant.data
quant.data
plants    = c(2, 4, 13, 15)
no.plants = length(plants)
plant.no = 1
data = lapply(plants, read.data, only.l1=TRUE)
quant.data   = lapply(data, "[[", "quant.data")
mapping.data = lapply(data, "[[", "mapping.data")
timepoints   = lapply(data, "[[", "timepoints")
for(ii in 1:length(quant.data)) for(jj in 1:length(quant.data[[ii]])) {
quant.data[[ii]][[jj]] = cbind(t = rep(jj, nrow(quant.data[[ii]][[jj]])), quant.data[[ii]][[jj]])
quant.data[[ii]][[jj]] = cbind(plant = rep(plants[ii], nrow(quant.data[[ii]][[jj]])), quant.data[[ii]][[jj]])
}
quant.data
all.quant.data   = do.call(rbind, unlist(quant.data, recursive = F))
vars = c("plant", "t", "id","x","y","z","vol","expr","d2t")
colnames(all.quant.data)   = vars
all.quant.data
all.quant.data = all.quant.data[all.quant.data[,"d2t"] < 2, ]
library(ggplot2)
t = all.quant.data[,"t"]; vol = all.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
t = all.quant.data[,"plant"]; vol = all.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
t = all.quant.data[,"expr"]; expr = all.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
t = all.quant.data[,"plant"]; expr = all.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
source('~/compbio/thesis/code/read_data.R')
source('~/compbio/thesis/code/population_analysis.R')
par(mfrow = c(3, 1), mar = c(4, 4, 4, 4))
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.quant.data[all.quant.data[,"plant"] == plant.no, ii], all.quant.data[all.quant.data[,"plant"] == plant.no, jj], xlab = colnames(all.quant.data)[ii], ylab = colnames(all.quant.data)[jj])
plant.no
plant.no = 2
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.quant.data[all.quant.data[,"plant"] == plant.no, ii], all.quant.data[all.quant.data[,"plant"] == plant.no, jj], xlab = colnames(all.quant.data)[ii], ylab = colnames(all.quant.data)[jj])
source('~/compbio/thesis/code/population_analysis.R')
for(ii in 7:9) hist(all.quant.data[p.idx, ii], main = colnames(all.quant.data[ii]), breaks = no.breaks)
for(ii in 7:9) hist(all.quant.data[, ii],   main = colnames(all.quant.data[ii]),   breaks = no.breaks)
for(ii in 7:9) hist(all.quant.data[p.idx, ii], main = colnames(all.quant.data[ii]), breaks = no.breaks)
for(ii in 7:9) hist(all.quant.data[, ii],   main = colnames(all.quant.data[ii]),   breaks = no.breaks)
all.quant.data = all.quant.data[all.quant.data[,"d2t"] < 2, ]
library(ggplot2)
t = all.quant.data[,"plant"]; vol = all.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
t = all.quant.data[,"t"]; vol = all.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
t = all.quant.data[,"t"]; expr = all.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
t = all.quant.data[,"t"]; expr = all.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t = t[there], expr = expr[there]), aes(factor(t), expr)); p + geom_violin()
t = all.quant.data[,"t"]; vol = all.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
source('~/compbio/thesis/code/population_analysis.R')
t = all.quant.data[,"t"]; vol = all.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
all.quant.data
all.quant.data[,""]
all.quant.data[,"t"]
plants    = c(2, 4, 13, 15)
no.plants = length(plants)
plant.no = 2
p.idx = all.quant.data[,"plant"] == plant.no
data = lapply(plants, read.data, only.l2 = TRUE)
quant.data   = lapply(data, "[[", "quant.data")
mapping.data = lapply(data, "[[", "mapping.data")
timepoints   = lapply(data, "[[", "timepoints")
data
for(ii in 1:length(quant.data)) for(jj in 1:length(quant.data[[ii]])) {
quant.data[[ii]][[jj]] = cbind(t = rep(jj, nrow(quant.data[[ii]][[jj]])), quant.data[[ii]][[jj]])
quant.data[[ii]][[jj]] = cbind(plant = rep(plants[ii], nrow(quant.data[[ii]][[jj]])), quant.data[[ii]][[jj]])
}
quant.data
all.quant.data   = do.call(rbind, unlist(quant.data, recursive = F))
all.quant.data
vars = c("plant", "t", "id","x","y","z","vol","expr","d2t")
colnames(all.quant.data)   = vars
par(mfrow = c(3, 1), mar = c(4, 4, 4, 4))
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.quant.data[, ii], all.quant.data[, jj], xlab = colnames(all.quant.data)[ii], ylab = colnames(all.quant.data)[jj])
par(mfrow = c(3, 1), mar = c(4, 4, 4, 4))
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.quant.data[p.idx, ii], all.quant.data[p.idx, jj], xlab = colnames(all.quant.data)[ii], ylab = colnames(all.quant.data)[jj])
no.breaks = 100
par(mfrow = c(3, 1), mar = c(4, 4, 4, 4))
for(ii in 7:9) hist(all.quant.data[, ii],   main = colnames(all.quant.data[ii]),   breaks = no.breaks)
for(ii in 7:9) hist(all.quant.data[p.idx, ii], main = colnames(all.quant.data[ii]), breaks = no.breaks)
library(ggplot2)
t = all.quant.data[,"t"]; vol = all.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
t = all.quant.data[,"t"]; expr = all.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t = t[there], expr = expr[there]), aes(factor(t), expr)); p + geom_violin()
par(mfrow = c(3, 1), mar = c(4, 4, 4, 4))
for(ii in 7:9) hist(all.quant.data[, ii],   main = colnames(all.quant.data[ii]),   breaks = no.breaks)
t = all.l1.quant.data[,"t"]; vol = all.l1.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
t = all.l2.quant.data[,"t"]; vol = all.l2.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p + geom_violin()
source('~/compbio/thesis/code/population_analysis.R')
all.l1.quant.data
colnames(all.l1.quant.data) = vars
colnames(all.l2.quant.data) = vars
par(mfcol = c(3, 2), mar = c(4, 4, 4, 4))
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l1.quant.data[, ii], all.l1.quant.data[, jj],
xlab = colnames(all.l1.quant.data)[ii], ylab = colnames(all.l1.quant.data)[jj])
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l2.quant.data[, ii], all.l2.quant.data[, jj],
xlab = colnames(all.l2.quant.data)[ii], ylab = colnames(all.l2.quant.data)[jj])
source('~/compbio/thesis/code/read_data.R')
plants    = c(2, 4, 13, 15)
no.plants = length(plants)
plant.no = 2
p.idx = all.quant.data[,"plant"] == plant.no
l1.data = lapply(plants, read.data, only.l1 = TRUE)
l2.data = lapply(plants, read.data, only.l2 = TRUE)
l1.quant.data   = lapply(l1.data, "[[", "quant.data")
l1.mapping.data = lapply(l1.data, "[[", "mapping.data")
l2.quant.data   = lapply(l2.data, "[[", "quant.data")
l2.mapping.data = lapply(l2.data, "[[", "mapping.data")
timepoints      = lapply(l1.data, "[[", "timepoints")
for(ii in 1:length(l1.quant.data)) for(jj in 1:length(l1.quant.data[[ii]])) {
l1.quant.data[[ii]][[jj]] = cbind(t = rep(jj, nrow(l1.quant.data[[ii]][[jj]])), l1.quant.data[[ii]][[jj]])
l1.quant.data[[ii]][[jj]] = cbind(plant = rep(plants[ii], nrow(l1.quant.data[[ii]][[jj]])), l1.quant.data[[ii]][[jj]])
l2.quant.data[[ii]][[jj]] = cbind(t = rep(jj, nrow(l2.quant.data[[ii]][[jj]])), l2.quant.data[[ii]][[jj]])
l2.quant.data[[ii]][[jj]] = cbind(plant = rep(plants[ii], nrow(l2.quant.data[[ii]][[jj]])), l2.quant.data[[ii]][[jj]])
}
all.l1.quant.data   = do.call(rbind, unlist(l1.quant.data, recursive = F))
all.l2.quant.data   = do.call(rbind, unlist(l2.quant.data, recursive = F))
vars = c("plant", "t", "id","x","y","z","vol","expr","d2t")
colnames(all.l1.quant.data) = vars
colnames(all.l2.quant.data) = vars
par(mfcol = c(3, 2), mar = c(4, 4, 4, 4))
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l1.quant.data[, ii], all.l1.quant.data[, jj],
xlab = colnames(all.l1.quant.data)[ii], ylab = colnames(all.l1.quant.data)[jj])
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l2.quant.data[, ii], all.l2.quant.data[, jj],
xlab = colnames(all.l2.quant.data)[ii], ylab = colnames(all.l2.quant.data)[jj])
par(mfcol = c(3, 2), mar = c(4, 4, 4, 4))
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l1.quant.data[p.idx, ii], all.l1.quant.data[p.idx, jj],
xlab = colnames(all.l1.quant.data)[ii], ylab = colnames(all.l1.quant.data)[jj])
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l2.quant.data[p.idx, ii], all.l2.quant.data[p.idx, jj],
xlab = colnames(all.l2.quant.data)[ii], ylab = colnames(all.l2.quant.data)[jj])
no.breaks = 100
par(mfcol = c(3, 2), mar = c(4, 4, 4, 4))
for(ii in 7:9) hist(all.l1.quant.data[, ii], main = colnames(all.l1.quant.data[ii]), breaks = no.breaks)
for(ii in 7:9) hist(all.l2.quant.data[, ii], main = colnames(all.l2.quant.data[ii]), breaks = no.breaks)
for(ii in 7:9) hist(all.l1.quant.data[p.idx, ii], main = colnames(all.l1.quant.data[ii]), breaks = no.breaks)
for(ii in 7:9) hist(all.l2.quant.data[p.idx, ii], main = colnames(all.l2.quant.data[ii]), breaks = no.breaks)
source('~/compbio/thesis/code/population_analysis.R')
no.breaks = 50
par(mfcol = c(3, 2), mar = c(4, 4, 4, 4))
for(ii in 7:9) hist(all.l1.quant.data[, ii], main = colnames(all.l1.quant.data[ii]), breaks = no.breaks)
for(ii in 7:9) hist(all.l2.quant.data[, ii], main = colnames(all.l2.quant.data[ii]), breaks = no.breaks)
for(ii in 7:9) hist(all.l1.quant.data[p.idx, ii], main = colnames(all.l1.quant.data[ii]), breaks = no.breaks)
for(ii in 7:9) hist(all.l2.quant.data[p.idx, ii], main = colnames(all.l2.quant.data[ii]), breaks = no.breaks)
library(ggplot2)
t = all.l1.quant.data[,"t"]; expr = all.l1.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
t = all.l2.quant.data[,"t"]; expr = all.l2.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
par(mfrow=c(2,1))
t = all.l1.quant.data[,"t"]; expr = all.l1.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
t = all.l2.quant.data[,"t"]; expr = all.l2.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
p1 = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
p2 = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
grid.arrange(p1, p2 , ncol=2)
library(grid)
t = all.l1.quant.data[,"t"]; expr = all.l1.quant.data[,"expr"]; there = nna(t) & nna(expr)
p1 = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
t = all.l2.quant.data[,"t"]; expr = all.l2.quant.data[,"expr"]; there = nna(t) & nna(expr)
p2 = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
grid.arrange(p1, p2 , ncol=2)
library("gridExtra")
grid.arrange(p1, p2 , ncol=2)
grid.arrange(p1, p2 , ncol=1)
t = all.l1.quant.data[,"t"]; expr = all.l1.quant.data[,"expr"]; there = nna(t) & nna(expr)
p1 = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
t = all.l2.quant.data[,"t"]; expr = all.l2.quant.data[,"expr"]; there = nna(t) & nna(expr)
p2 = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p + geom_violin()
grid.arrange(p1, p2 , ncol=1)
par(mfrow=c(2,1))
t = all.l1.quant.data[,"t"]; expr = all.l1.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p1 = p + geom_violin()
t = all.l2.quant.data[,"t"]; expr = all.l2.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p2 = p + geom_violin()
grid.arrange(p1, p2 , ncol=1)
packages = c("reshape", "scales", "stringr", "plyr", "parallel", "limma", "affy", "RColorBrewer", "ggplot2", "grid", "gridExtra")
try(lapply(packages, library, character.only = TRUE), silent = TRUE)
palette(brewer.pal(n = 8, name = "Set1"))
lw.s = 2
par(lwd = lw.s, cex = 1.5, ps = 15)
?brewer.pal
display.brewer.all()
par(mfrow=c(1,1))
display.brewer.all()
par(mfrow=c(2,1))
t = all.l1.quant.data[,"t"]; expr = all.l1.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p1 = p + geom_violin()
t = all.l2.quant.data[,"t"]; expr = all.l2.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p2 = p + geom_violin()
grid.arrange(p1, p2 , ncol=1)
t = all.l1.quant.data[,"t"]; vol = all.l1.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p1 = p + geom_violin()
t = all.l2.quant.data[,"t"]; vol = all.l2.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p2 = p + geom_violin()
grid.arrange(p1, p2 , ncol=1)
all.l1.quant.data = all.l1.quant.data[all.l1.quant.data[,"d2t"] < 5, ]
all.l2.quant.data = all.l2.quant.data[all.l2.quant.data[,"d2t"] < 5, ]
par(mfrow=c(2,1))
t = all.l1.quant.data[,"t"]; expr = all.l1.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p1 = p + geom_violin()
t = all.l2.quant.data[,"t"]; expr = all.l2.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p2 = p + geom_violin()
grid.arrange(p1, p2 , ncol=1)
t = all.l1.quant.data[,"t"]; vol = all.l1.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p1 = p + geom_violin()
t = all.l2.quant.data[,"t"]; vol = all.l2.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p2 = p + geom_violin()
grid.arrange(p1, p2 , ncol=1)
all.l1.quant.data = all.l1.quant.data[all.l1.quant.data[,"d2t"] < 2, ]
all.l2.quant.data = all.l2.quant.data[all.l2.quant.data[,"d2t"] < 2, ]
par(mfrow=c(2,1))
t = all.l1.quant.data[,"t"]; expr = all.l1.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p1 = p + geom_violin()
t = all.l2.quant.data[,"t"]; expr = all.l2.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p2 = p + geom_violin()
grid.arrange(p1, p2 , ncol=1)
all.l1.quant.data = all.l1.quant.data[all.l1.quant.data[,"plant"] == 2, ]
all.l2.quant.data = all.l2.quant.data[all.l2.quant.data[,"plant"] == 2, ]
par(mfrow=c(2,1))
t = all.l1.quant.data[,"t"]; expr = all.l1.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p1 = p + geom_violin()
t = all.l2.quant.data[,"t"]; expr = all.l2.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p2 = p + geom_violin()
grid.arrange(p1, p2 , ncol=1)
t = all.l1.quant.data[,"t"]; vol = all.l1.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p1 = p + geom_violin()
t = all.l2.quant.data[,"t"]; vol = all.l2.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p2 = p + geom_violin()
grid.arrange(p1, p2 , ncol=1)
source('~/compbio/thesis/code/population_analysis.R')
all.l1.quant.data = all.l1.quant.data[all.l1.quant.data[,"plant"] == 13, ]
all.l2.quant.data = all.l2.quant.data[all.l2.quant.data[,"plant"] == 13, ]
par(mfrow=c(2,1))
t = all.l1.quant.data[,"t"]; expr = all.l1.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p1 = p + geom_violin()
t = all.l2.quant.data[,"t"]; expr = all.l2.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p2 = p + geom_violin()
grid.arrange(p1, p2 , ncol=1)
source('~/compbio/thesis/code/population_analysis.R')
par(mfrow=c(2,1))
t = all.l1.quant.data[,"t"]; expr = all.l1.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(t, expr)); p1 = p + geom_violin()
t = all.l2.quant.data[,"t"]; expr = all.l2.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p2 = p + geom_violin()
grid.arrange(p1, p2 , ncol=1)
par(mfrow=c(2,1))
t = all.l1.quant.data[,"t"]; expr = all.l1.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p1 = p + geom_violin()
t = all.l2.quant.data[,"t"]; expr = all.l2.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p2 = p + geom_violin()
grid.arrange(p1, p2 , ncol=1)
source('~/compbio/thesis/code/population_analysis.R')
par(mfrow=c(2,1))
t = all.l1.quant.data[,"t"]; expr = all.l1.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p1 = p + geom_violin()
t = all.l2.quant.data[,"t"]; expr = all.l2.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p2 = p + geom_violin()
grid.arrange(p1, p2 , ncol=1)
source('~/compbio/thesis/code/population_analysis.R')
t = all.l1.quant.data[,"t"]; expr = all.l1.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p1 = p + geom_violin()
t = all.l2.quant.data[,"t"]; expr = all.l2.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p2 = p + geom_violin()
grid.arrange(p1, p2 , ncol=1)
par(mfrow=c(2,1))
t = all.l1.quant.data[,"t"]; expr = all.l1.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p1 = p + geom_violin()
t = all.l2.quant.data[,"t"]; expr = all.l2.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p2 = p + geom_violin()
grid.arrange(p1, p2 , ncol=1)
source('~/compbio/thesis/code/population_analysis.R')
all.l1.quant.data = all.l1.quant.data[all.l1.quant.data[,"plant"] == 2, ]
all.l2.quant.data = all.l2.quant.data[all.l2.quant.data[,"plant"] == 2, ]
par(mfrow=c(2,1))
t = all.l1.quant.data[,"t"]; expr = all.l1.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p1 = p + geom_violin()
t = all.l2.quant.data[,"t"]; expr = all.l2.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p2 = p + geom_violin()
grid.arrange(p1, p2 , ncol=1)
t = all.l1.quant.data[,"t"]; vol = all.l1.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p1 = p + geom_violin()
t = all.l2.quant.data[,"t"]; vol = all.l2.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p2 = p + geom_violin()
grid.arrange(p1, p2 , ncol=1)
source('~/compbio/thesis/code/population_analysis.R')
par(mfrow=c(2,1))
t = all.l1.quant.data[,"t"]; expr = all.l1.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p1 = p + geom_violin()
t = all.l2.quant.data[,"t"]; expr = all.l2.quant.data[,"expr"]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p2 = p + geom_violin()
grid.arrange(p1, p2 , ncol = 1)
t = all.l1.quant.data[,"t"]; vol = all.l1.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p3 = p + geom_violin()
t = all.l2.quant.data[,"t"]; vol = all.l2.quant.data[,"vol"]; there = nna(t) & nna(vol)
p = ggplot(data.frame(t=t[there], vol=vol[there]), aes(factor(t), vol)); p4 = p + geom_violin()
grid.arrange(p1, p2, p3, p4, ncol = 2)
t = data[,var1]; expr = data[, var2]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p1 = p + geom_violin() + labs(y=var2, x=var1)
var1= "t"
var2= "expr"
t = data[,var1]; expr = data[, var2]; there = nna(t) & nna(expr)
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p1 = p + geom_violin() + labs(y=var2, x=var1)
data = all.l1.quant.data
p = ggplot(data.frame(t=t[there], expr=expr[there]), aes(factor(t), expr)); p1 = p + geom_violin() + labs(y=var2, x=var1)
p1
source('~/compbio/thesis/code/plot.R')
p1=plot.violin(all.l1.quant.data, "t", "expr")
p2=plot.violin(all.l2.quant.data, "t", "expr")
p3=plot.violin(all.l1.quant.data, "t", "vol")
p4=plot.violin(all.l2.quant.data, "t", "vol")
grid.arrange(p1, p2, p3, p4, ncol = 2)
no.clv3 = ldply(sapply(quant.data, function(x) sapply(x, nrow)), rbind)
timepts = ldply(sapply(plants, get.q.timepoints), rbind)
par(mfrow=c(1,1)); plot(NA, xlim=c(0,84), ylim=c(0,110))
sapply(1:nrow(timepts), function(x) lines(timepts[x, ], no.clv3[x, ], type="b", col = x))
no.clv3 = ldply(sapply(all.l2.quant.data, function(x) sapply(x, nrow)), rbind)
timepts = ldply(sapply(plants, get.q.timepoints), rbind)
par(mfrow=c(1,1)); plot(NA, xlim=c(0,84), ylim=c(0,110))
sapply(1:nrow(timepts), function(x) lines(timepts[x, ], no.clv3[x, ], type="b", col = x))
all.l2.quant.data
no.clv3
no.clv3 = ldply(sapply(l2.quant.data, function(x) sapply(x, nrow)), rbind)
no.clv3
timepts = ldply(sapply(plants, get.q.timepoints), rbind)
par(mfrow=c(1,1)); plot(NA, xlim=c(0,84), ylim=c(0,110))
sapply(1:nrow(timepts), function(x) lines(timepts[x, ], no.clv3[x, ], type="b", col = x))
par(mfrow=c(2,1))
no.clv3 = ldply(sapply(l2.quant.data, function(x) sapply(x, nrow)), rbind)
timepts = ldply(sapply(plants, get.q.timepoints), rbind)
sapply(1:nrow(timepts), function(x) lines(timepts[x, ], no.clv3[x, ], type="b", col = x))
par(mfrow=c(2,1))
no.clv3 = ldply(sapply(l2.quant.data, function(x) sapply(x, nrow)), rbind)
timepts = ldply(sapply(plants, get.q.timepoints), rbind)
sapply(1:nrow(timepts), function(x) lines(timepts[x, ], no.clv3[x, ], type="b", col = x))
no.clv3 = ldply(sapply(l1.quant.data, function(x) sapply(x, nrow)), rbind)
timepts = ldply(sapply(plants, get.q.timepoints), rbind)
sapply(1:nrow(timepts), function(x) lines(timepts[x, ], no.clv3[x, ], type="b", col = x))
par(mfrow=c(2,1)); plot(NA, xlim=c(0,84), ylim=c(0,100))
no.clv3 = ldply(sapply(l2.quant.data, function(x) sapply(x, nrow)), rbind)
timepts = ldply(sapply(plants, get.q.timepoints), rbind)
sapply(1:nrow(timepts), function(x) lines(timepts[x, ], no.clv3[x, ], type="b", col = x))
no.clv3 = ldply(sapply(l1.quant.data, function(x) sapply(x, nrow)), rbind)
timepts = ldply(sapply(plants, get.q.timepoints), rbind)
plot(NA, xlim=c(0,84), ylim=c(0,100))
no.clv3 = ldply(sapply(l1.quant.data, function(x) sapply(x, nrow)), rbind)
timepts = ldply(sapply(plants, get.q.timepoints), rbind)
sapply(1:nrow(timepts), function(x) lines(timepts[x, ], no.clv3[x, ], type="b", col = x))
par(mfrow=c(2,1)); plot(NA, xlim=c(0,84), ylim=c(0,100))
no.clv3 = ldply(sapply(l1.quant.data, function(x) sapply(x, nrow)), rbind)
timepts = ldply(sapply(plants, get.q.timepoints), rbind)
sapply(1:nrow(timepts), function(x) lines(timepts[x, ], no.clv3[x, ], type="b", col = x))
plot(NA, xlim=c(0,84), ylim=c(0,100))
no.clv3 = ldply(sapply(l2.quant.data, function(x) sapply(x, nrow)), rbind)
timepts = ldply(sapply(plants, get.q.timepoints), rbind)
sapply(1:nrow(timepts), function(x) lines(timepts[x, ], no.clv3[x, ], type="b", col = x))
for(ii in 7:9) hist(all.l1.quant.data[, ii], main = colnames(all.l1.quant.data[ii]), breaks = no.breaks)
for(ii in 7:9) hist(all.l2.quant.data[, ii], main = colnames(all.l2.quant.data[ii]), breaks = no.breaks)
for(ii in 7:9) hist(all.l1.quant.data[p.idx, ii], main = colnames(all.l1.quant.data[ii]), breaks = no.breaks)
for(ii in 7:9) hist(all.l2.quant.data[p.idx, ii], main = colnames(all.l2.quant.data[ii]), breaks = no.breaks)
plants    = c(2, 4, 13, 15)
no.plants = length(plants)
plant.no = 15
p.idx = all.quant.data[,"plant"] == plant.no
l1.data = lapply(plants, read.data, only.l1 = TRUE)
l2.data = lapply(plants, read.data, only.l2 = TRUE)
l1.quant.data   = lapply(l1.data, "[[", "quant.data")
l1.mapping.data = lapply(l1.data, "[[", "mapping.data")
l2.quant.data   = lapply(l2.data, "[[", "quant.data")
l2.mapping.data = lapply(l2.data, "[[", "mapping.data")
timepoints      = lapply(l1.data, "[[", "timepoints")
for(ii in 1:length(l1.quant.data)) for(jj in 1:length(l1.quant.data[[ii]])) {
l1.quant.data[[ii]][[jj]] = cbind(t = rep(jj, nrow(l1.quant.data[[ii]][[jj]])), l1.quant.data[[ii]][[jj]])
l1.quant.data[[ii]][[jj]] = cbind(plant = rep(plants[ii], nrow(l1.quant.data[[ii]][[jj]])), l1.quant.data[[ii]][[jj]])
l2.quant.data[[ii]][[jj]] = cbind(t = rep(jj, nrow(l2.quant.data[[ii]][[jj]])), l2.quant.data[[ii]][[jj]])
l2.quant.data[[ii]][[jj]] = cbind(plant = rep(plants[ii], nrow(l2.quant.data[[ii]][[jj]])), l2.quant.data[[ii]][[jj]])
}
all.l1.quant.data   = do.call(rbind, unlist(l1.quant.data, recursive = F))
all.l2.quant.data   = do.call(rbind, unlist(l2.quant.data, recursive = F))
vars = c("plant", "t", "id","x","y","z","vol","expr","d2t")
colnames(all.l1.quant.data) = vars
colnames(all.l2.quant.data) = vars
par(mfcol = c(3, 2), mar = c(4, 4, 4, 4))
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l1.quant.data[, ii], all.l1.quant.data[, jj],
xlab = colnames(all.l1.quant.data)[ii], ylab = colnames(all.l1.quant.data)[jj])
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l2.quant.data[, ii], all.l2.quant.data[, jj],
xlab = colnames(all.l2.quant.data)[ii], ylab = colnames(all.l2.quant.data)[jj])
par(mfcol = c(3, 2), mar = c(4, 4, 4, 4))
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l1.quant.data[p.idx, ii], all.l1.quant.data[p.idx, jj],
xlab = colnames(all.l1.quant.data)[ii], ylab = colnames(all.l1.quant.data)[jj])
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l2.quant.data[p.idx, ii], all.l2.quant.data[p.idx, jj],
xlab = colnames(all.l2.quant.data)[ii], ylab = colnames(all.l2.quant.data)[jj])
no.breaks = 50
par(mfcol = c(3, 2), mar = c(4, 4, 4, 4))
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l1.quant.data[, ii], all.l1.quant.data[, jj],
xlab = colnames(all.l1.quant.data)[ii], ylab = colnames(all.l1.quant.data)[jj])
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l2.quant.data[, ii], all.l2.quant.data[, jj],
xlab = colnames(all.l2.quant.data)[ii], ylab = colnames(all.l2.quant.data)[jj])
par(mfcol = c(3, 2), mar = c(4, 4, 4, 4))
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l1.quant.data[, ii], all.l1.quant.data[, jj],
xlab = colnames(all.l1.quant.data)[ii], ylab = colnames(all.l1.quant.data)[jj])
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l2.quant.data[, ii], all.l2.quant.data[, jj],
xlab = colnames(all.l2.quant.data)[ii], ylab = colnames(all.l2.quant.data)[jj])
par(mfcol = c(3, 2), mar = c(4, 4, 4, 4))
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l1.quant.data[, ii], all.l1.quant.data[, jj],
xlab = colnames(all.l1.quant.data)[ii], ylab = colnames(all.l1.quant.data)[jj])
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l2.quant.data[, ii], all.l2.quant.data[, jj],
xlab = colnames(all.l2.quant.data)[ii], ylab = colnames(all.l2.quant.data)[jj])
par(mfcol = c(3, 2), mar = c(4, 4, 4, 4))
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l1.quant.data[p.idx, ii], all.l1.quant.data[p.idx, jj],
xlab = colnames(all.l1.quant.data)[ii], ylab = colnames(all.l1.quant.data)[jj])
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l2.quant.data[p.idx, ii], all.l2.quant.data[p.idx, jj],
xlab = colnames(all.l2.quant.data)[ii], ylab = colnames(all.l2.quant.data)[jj])
par(mfcol = c(3, 2), mar = c(4, 4, 4, 4))
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l1.quant.data[, ii], all.l1.quant.data[, jj],
xlab = colnames(all.l1.quant.data)[ii], ylab = colnames(all.l1.quant.data)[jj])
for(ii in 7:9) for (jj in (ii:9)[-which(ii:9 == ii)])
plot(all.l2.quant.data[, ii], all.l2.quant.data[, jj],
xlab = colnames(all.l2.quant.data)[ii], ylab = colnames(all.l2.quant.data)[jj])
source('~/compbio/thesis/code/toshow.R')
