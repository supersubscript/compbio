for (kk in time:2) {
# If the mother to the reference has more than one offspring, then a division event has taken place
mother.no.offspring = length(which(mothers[,"t"] == kk - 1 & mothers[, "mother.id"] == reference.id))
if (mother.no.offspring > 1) {
break
}
age = age + 1
# Go back a generation
print(reference.id)
print(mothers[mothers[,"t"] == kk & mothers[, "mother.id"] == reference.id, "mother.id"][1])
reference.id = mothers[mothers[,"t"] == kk & mothers[, "mother.id"] == reference.id, "mother.id"][1] #mothers[which(mothers[, "t"] == kk), "cell.id"]
}
reference.id = unname(mothers[mothers[, "cell.id"] == mother.id & mothers[,"t"] == time, "mother.id"]) # grandmother
reference.id
mother.id
this.cell.id = division.data[[ii]][1]
mother.id = unname(mothers[mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time, "mother.id"]) # Which is the mother id for this cell?
mother.id
reference.id = unname(mothers[mothers[, "cell.id"] == mother.id & mothers[,"t"] == time - 1, "mother.id"]) # grandmother
reference.id
age = 0
reference.id = unname(mothers[mothers[, "cell.id"] == mother.id & mothers[,"t"] == time - 1, "mother.id"]) # grandmother
for (kk in time:2) {
# If the mother to the reference has more than one offspring, then a division event has taken place
mother.no.offspring = length(which(mothers[,"t"] == kk - 1 & mothers[, "mother.id"] == reference.id))
if (mother.no.offspring > 1) {
break
}
age = age + 1
# Go back a generation
print(reference.id)
print(mothers[mothers[,"t"] == kk & mothers[, "mother.id"] == reference.id, "mother.id"][1])
reference.id = mothers[mothers[,"t"] == kk & mothers[, "mother.id"] == reference.id, "mother.id"][1] #mothers[which(mothers[, "t"] == kk), "cell.id"]
}
age
which(mothers[,"t"] == kk - 1 & mothers[, "mother.id"] == reference.id)
time
mother.no.offspring = length(which(mothers[,"t"] == kk - 1 & mothers[, "cell.id"] == reference.id))
mother.no.offspring
mother.id = unname(mothers[mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time, "mother.id"]) # Which is the mother id for this cell?
age = 0
reference.id = unname(mothers[mothers[, "cell.id"] == mother.id & mothers[,"t"] == time  -1, "mother.id"]) # grandmother
reference.id
reference.id
no.offspring = length(which(mothers[,"t"] == kk - 1 & mothers[, "mother.id"] == reference.id))
present.previous = mothers[,"t"] == kk - 1
no.offspring = length(which(mothers[,"t"] == kk - 1 & mothers[, "mother.id"] == reference.id))
present.previous = mothers[,"t"] == kk - 1
ancestor = mothers[, "mother.id"] == reference.id
ancestor
any(ancestor)
mothers[ancestor & present.previous,]
mothers[,"t"] == kk - 1
sum(mothers[,"t"] == kk - 1)
kk
kk = 20
this.cell.id = division.data[[ii]][1]
mother.id = unname(mothers[mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time, "mother.id"]) # Which is the mother id for this cell?
age = 0
reference.id = unname(mothers[mothers[, "cell.id"] == mother.id & mothers[,"t"] == time - 1, "mother.id"]) # grandmother
reference.id
present.previous = mothers[,"t"] == kk - 1
ancestor = mothers[, "mother.id"] == reference.id
length(mothers[ancestor & present.previous,])
no.offspring = length(mothers[ancestor & present.previous, ])
mothers[mothers[,"t"] == kk & mothers[, "mother.id"] == reference.id, "mother.id"][1]
mothers[present.previous & ancestor, "mother.id"][1]
age = 0
latest = mother.id
# reference.id = unname(mothers[mothers[, "cell.id"] == mother.id & mothers[,"t"] == time - 1, "mother.id"]) # grandmother
for (kk in time:2) {
reference.id = unname(mothers[mothers[, "cell.id"] == latest & mothers[,"t"] == time - 1, "mother.id"])
present.previous = mothers[,"t"] == kk - 1
ancestor = mothers[, "mother.id"] == reference.id
no.offspring = length(mothers[ancestor & present.previous, ])
latest = reference.id
# If the mother to the reference has more than one offspring, then a division event has taken place
if (no.offspring > 1) {
break
}
age = age + 1
}
age
this.cell.id = division.data[[ii]][1]
# mother.id = mothers[which(mothers[mothers[, "t"] == time, "cell.id"] == this.cell.id), "mother.id"]
mother.id = unname(mothers[mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time, "mother.id"]) # Which is the mother id for this cell?
# Find how long the mother has been alive for
age = 0
latest = mother.id
# reference.id = unname(mothers[mothers[, "cell.id"] == mother.id & mothers[,"t"] == time - 1, "mother.id"]) # grandmother
for (kk in time:2) {
reference.id = unname(mothers[mothers[, "cell.id"] == latest & mothers[,"t"] == time - 1, "mother.id"])
present.previous = mothers[,"t"] == kk - 1
ancestor = mothers[, "mother.id"] == reference.id
no.offspring = length(mothers[ancestor & present.previous, ])
print(no.offspring)
latest = reference.id
# If the mother to the reference has more than one offspring, then a division event has taken place
if (no.offspring > 1) {
break
}
age = age + 1
}
output.data
source('~/compbio/thesis/code/extract_division_events.R')
warnings()
output.data
print(c(this.cell.id, # the id of the cell in this timepoint
lineage.id, # the cell lineage id
mother.id, # mother id in previous timepoint
division.data[[ii]][2], #daughter1 id
division.data[[ii]][3], # daughter2 id
age,
(time - 1) * 4,
xyzvi, d1, d2))
this.cell.id
lineage.id
lineage.id
mother.id
unname(mothers[mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time, "mother.id"])
mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time
any(mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time)
mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time
division.data[[ii]]
division.data[[ii]][1]
mother.id = unname(mothers[mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time - 1, "mother.id"]) # Which is the mother id for this cell?
mother.id
source('~/compbio/thesis/code/extract_division_events.R')
mother.id
this.cell.id
this.cell.id
lineage.id
mother.id
division.data[[ii]][2]
division.data[[ii]][3]
age
(time - 1) * 4
xyzvi
d1
d2
warnings()
c(this.cell.id, # the id of the cell in this timepoint
lineage.id, # the cell lineage id
mother.id, # mother id in previous timepoint
division.data[[ii]][2], #daughter1 id
division.data[[ii]][3], # daughter2 id
age,
(time - 1) * 4,
xyzvi, d1, d2))
length(c(this.cell.id, # the id of the cell in this timepoint
lineage.id, # the cell lineage id
mother.id, # mother id in previous timepoint
division.data[[ii]][2], #daughter1 id
division.data[[ii]][3], # daughter2 id
age,
(time - 1) * 4,
xyzvi, d1, d2))
output.data
division.data[[ii]][3]
source('~/compbio/thesis/code/extract_division_events.R')
warnings()
divsion.data[[i]]
divsion.data[[ii]]
division.data[[ii]]
source('~/compbio/thesis/code/extract_division_events.R')
warnings()
output.data
ncol(output.data)
source('~/compbio/thesis/code/extract_division_events.R')
source('~/compbio/thesis/code/extract_division_events.R')
source('~/compbio/thesis/code/extract_division_events.R')
source('~/compbio/thesis/code/extract_division_events.R')
ii
xyzvi, d1, d2
xyzvi
d1
d2
(time - 1) * 4
age
division.data[[ii]][3]
division.data[[ii]][2]
mother.id
time
mother.id = unname(mothers[mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time, "mother.id"]) # Which is the mother id for this cell?
mother.id
mothers
mothers[,"t"] == time
mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time
any(mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time)
mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time + 1
any(mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time + 1)
mother.id = unname(mothers[mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time - 1, "mother.id"])
mother.id
time
this.cell.id = division.data[[ii]][1]
mother.id = unname(mothers[mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time - 1, "mother.id"]) # Which is the mother id for this cell?
mother.id
mothers[mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time - 1, "mother.id"]
mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time - 1
mothers[, "cell.id"] == this.cell.id
source('~/compbio/thesis/code/extract_division_events.R')
ii
time
this.cell.id
mothers
mothers[mothers[,"t"] == 1, ]
this.cell.id
mother.id = unname(mothers[mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time - 1, "mother.id"]) # Which is the mother id for this cell?
mother.id
mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time - 1
any(mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time - 1)
time
this.cell.id
mothers
division.data
mothers = lapply(1:length(all.division.data), function(x)
lapply(all.division.data[[x]], function(y) {
mother.id = y[1] #rep(y[1], length(cell.id))
cell.id = y[-1]
if (length(cell.id) == 1)
return(matrix(c(t, mother.id, NA), ncol = 3, nrow = 1))
# print(unname(cbind(t = x, mother.id, cell.id)))
return(cbind(t = x, mother.id, cell.id))
}))
mothers = do.call(rbind, unlist(mothers, recursive = F))
first.gen = cbind(rep(0, length(all.division.data[[1]])),
rep(NA, length(all.division.data[[1]])),
sapply(all.division.data[[1]], "[[", 1))
mothers = rbind(first.gen, mothers)
mothers
mothers = lapply(1:length(all.division.data), function(x)
lapply(all.division.data[[x]], function(y) {
mother.id = y[1] #rep(y[1], length(cell.id))
cell.id = y[-1]
if (length(cell.id) == 1)
return(matrix(c(t=x, mother.id, NA), ncol = 3, nrow = 1))
# print(unname(cbind(t = x, mother.id, cell.id)))
return(cbind(t = x, mother.id, cell.id))
}))
mothers = do.call(rbind, unlist(mothers, recursive = F))
first.gen = cbind(rep(0, length(all.division.data[[1]])),
rep(NA, length(all.division.data[[1]])),
sapply(all.division.data[[1]], "[[", 1))
mothers = rbind(first.gen, mothers)
mothers
source('~/compbio/thesis/code/extract_division_events.R')
warnings()
mother.id
mothers
mother.id = y[1] #rep(y[1], length(cell.id))
all.division.data[[1]]
ts = rep(t=x, length(cell.id))
ts = rep(t=10, length(cell.id))
ts
mothers = lapply(1:length(all.division.data), function(x)
lapply(all.division.data[[x]], function(y) {
mother.id = y[1] #rep(y[1], length(cell.id))
cell.id = y[-1]
if (length(cell.id) == 1)
return(matrix(c(t=x, mother.id, cell.id), ncol = 3, nrow = 1))
# print(unname(cbind(t = x, mother.id, cell.id)))
mums = rep(mother.id, length(cell.id))
ts = rep(x, length(cell.id))
return(cbind(ts, mum, cell.id))
}))
mothers = do.call(rbind, unlist(mothers, recursive = F))
first.gen = cbind(rep(0, length(all.division.data[[1]])),
rep(NA, length(all.division.data[[1]])),
sapply(all.division.data[[1]], "[[", 1))
mothers = rbind(first.gen, mothers)
mother.id = y[1] #rep(y[1], length(cell.id))
y = all.division.data[[1]]
y
all.division.data
all.division.data[[1]][1]
mothers = lapply(1:length(all.division.data), function(x)
lapply(all.division.data[[x]], function(y) {
print(y)
mother.id = y[1] #rep(y[1], length(cell.id))
cell.id = y[-1]
if (length(cell.id) == 1)
return(matrix(c(t=x, mother.id, cell.id), ncol = 3, nrow = 1))
# print(unname(cbind(t = x, mother.id, cell.id)))
mums = rep(mother.id, length(cell.id))
ts = rep(x, length(cell.id))
return(cbind(ts, mum, cell.id))
}))
all.division.data[[1]][[1]]
y = all.division.data[[1]][[1]]
mother.id = y[1] #rep(y[1], length(cell.id))
cell.id = y[-1]
cell.id
mums = rep(mother.id, length(cell.id))
ts = rep(x, length(cell.id))
return(cbind(ts, mums, cell.id))
mothers = lapply(1:length(all.division.data), function(x)
lapply(all.division.data[[x]], function(y) {
# print(y)
mother.id = y[1] #rep(y[1], length(cell.id))
cell.id = y[-1]
if (length(cell.id) == 1)
return(matrix(c(t=x, mother.id, cell.id), ncol = 3, nrow = 1))
# print(unname(cbind(t = x, mother.id, cell.id)))
mums = rep(mother.id, length(cell.id))
ts = rep(x, length(cell.id))
return(cbind(ts, mums, cell.id))
}))
mothers = do.call(rbind, unlist(mothers, recursive = F))
first.gen = cbind(rep(0, length(all.division.data[[1]])),
rep(NA, length(all.division.data[[1]])),
sapply(all.division.data[[1]], "[[", 1))
mothers = rbind(first.gen, mothers)
mothers
source('~/compbio/thesis/code/extract_division_events.R')
t
time
mothers
source('~/compbio/thesis/code/extract_division_events.R')
warnings()
mother.id
cell.id
age
this.cell.id = division.data[[ii]][1]
this.cell.id
mother.id = (mothers[mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time - 1, "mother.id"]) # Which is the mother id for this cell?
age = 0
latest = mother.id
# reference.id = unname(mothers[mothers[, "cell.id"] == mother.id & mothers[,"t"] == time - 1, "mother.id"]) # grandmother
for (kk in time:2) {
# Check the mother. Does she have several offspring?
reference.id = unname(mothers[mothers[, "cell.id"] == latest & mothers[,"t"] == time - 1, "mother.id"])
present.previous = mothers[,"t"] == kk - 1
ancestor = mothers[, "mother.id"] == reference.id
no.offspring = length(mothers[ancestor & present.previous, ])
# print(no.offspring)
latest = reference.id
# If the mother to the reference has more than one offspring, then a division event has taken place
if (no.offspring > 1) {
break
}
age = age + 1
}
age
print(c(this.cell.id, # the id of the cell in this timepoint
lineage.id, # the cell lineage id
mother.id, # mother id in previous timepoint
division.data[[ii]][2], #daughter1 id
division.data[[ii]][3], # daughter2 id
age,
(time - 1) * 4,
xyzvi, d1, d2))
source('~/compbio/thesis/code/extract_division_events.R')
mithers
mothers
source('~/compbio/thesis/code/extract_division_events.R')
ii
mother.id = (mothers[mothers[, "cell.id"] == this.cell.id & mothers[,"t"] == time - 1, "mother.id"]) # Which is the mother id for this cell?
mother.i
mother.id
mothers[, "cell.id"] == this.cell.id
any(mothers[, "cell.id"] == this.cell.id)
mothers[,"t"] == time - 1
any(mothers[,"t"] == time - 1)
this.cell.id
mothers
this.cell.id
source('~/compbio/thesis/code/extract_division_events.R')
warnings
warnings()
output.data
source('~/compbio/thesis/code/extract_division_events.R')
warnings()
mother.id
reference.id
source('~/compbio/thesis/code/extract_division_events.R')
warnings()
reference.id
mother.id
source('~/compbio/thesis/code/extract_division_events.R')
warnings()
reference.id
mothers[,"mother.id"]
reference.id
length(reference.id)
source('~/compbio/thesis/code/extract_division_events.R')
for (kk in time:2) {
# Check the mother. Does she have several offspring?
reference.id = unname(mothers[mothers[, "cell.id"] == latest & mothers[,"t"] == time - 1, "mother.id"])
if(length(reference.id[!is.na(reference.id)]) == 0)
break
present.previous = mothers[,"t"] == kk - 1
# print(reference.id)
ancestor = mothers[, "mother.id"] == reference.id
no.offspring = length(mothers[ancestor & present.previous, ])
# print(no.offspring)
latest = reference.id
# If the mother to the reference has more than one offspring, then a division event has taken place
if (no.offspring > 1) {
break
}
age = age + 1
}
source('~/compbio/thesis/code/extract_division_events.R')
data.output
output.data
output.data[,"age"]
source('~/compbio/thesis/code/extract_division_events.R')
output.data[,"age"]
source('~/compbio/thesis/code/extract_division_events.R')
output.data[,"age"]
output.data
plot(output.data[,"age"])
hist(output.data[,"age"])
hist(output.data[,"age"], breaks = 20)
hist(output.data[,"age"], breaks = 30)
hist(output.data[,"age"], breaks = 40)
hist(output.data[,"age"], breaks = 100)
hist(output.data[,"age"], breaks = 10000)
hist(output.data[,"age"], breaks = 100)
data.output$cell.id
source('~/compbio/thesis/code/extract_division_events.R')
source('~/compbio/thesis/code/extract_division_events.R')
source('~/compbio/thesis/code/extract_division_events.R')
output.data
plot(output.data["mother.expr"])
plot(output.data[,"mother.expr"])
output.data[,"mother.expr"]
output.data
output.data[,"t"]
plot(output.data[,"t"], output.data[,"daughter1.expr")
plot(output.data[,"t"], output.data[,"daughter1.expr")
plot(output.data[,"t"], output.data[,"daughter1.expr"])
hist((output.data[,"t"], output.data[,"daughter1.expr"]))
hist(output.data[,"daughter1.expr"]))
hist(output.data[,"daughter1.expr"])
hist(output.data[,"daughter1.expr"], breaks = 20)
plot(output.data[, "t"], output.data[, "expr"])
plot(output.data[, "t"], output.data[, "expr"])
output.data[, "t"]
output.data[, "expr"]
this.cell.index = quant.data$Cell.id[, time] %in% division.data[[ii]][1] # shouldn't this be time - 1?
this.cell.index
output.data
source('~/compbio/thesis/code/extract_division_events.R')
quant.files = list.files(paste0("/home/henrik/compbio/thesis/data/msb_plants/plant", plant.no, "/results"), full.names = TRUE)
numbers = sapply(quant.files, function(x) strsplit(x, "/")[[1]][length(strsplit(x, "/")[[1]])])
numbers = unname(sapply(numbers, function(x) as.integer(gsub("t|\\.txt", "", x))))
quant.files = quant.files[order(numbers)]
quant.files
data = lapply(quant.files, function(x) read.table(x, header=T, sep = "\t"))
data
cell.lines.data =  vector("list", nrow(cell.lines))  # prealloc
for(ii in 1:nrow(cell.lines)){
lineage.data = matrix(NA, nrow = 0, ncol = 1 + ncol(data[[1]]))
for(jj in 1:ncol(cell.lines)){
cells.in.lineage = which(data[[jj]]$Cell.id %in% cell.lines[[ii, jj]])
if(length(cells.in.lineage) > 0)
for(kk in 1:length(cells.in.lineage))
lineage.data = rbind(lineage.data, c(Time=(jj-1)*4, as.vector(data[[jj]][cells.in.lineage[kk], ])))
else
lineage.data = rbind(lineage.data, rep(NA, ncol(lineage.data)))
}
cell.lines.data[[ii]] = lineage.data
}
cells.in.lineage = which(data[[jj]]$Cell.id %in% cell.lines[[ii, jj]])
jj
data
cell.lines
for(ii in 1:nrow(cell.lines)){
lineage.data = matrix(NA, nrow = 0, ncol = 1 + ncol(data[[1]]))
for(jj in 1:length(quant.files)){
cells.in.lineage = which(data[[jj]]$Cell.id %in% cell.lines[[ii, jj]])
if(length(cells.in.lineage) > 0)
for(kk in 1:length(cells.in.lineage))
lineage.data = rbind(lineage.data, c(Time=(jj-1)*4, as.vector(data[[jj]][cells.in.lineage[kk], ])))
else
lineage.data = rbind(lineage.data, rep(NA, ncol(lineage.data)))
}
cell.lines.data[[ii]] = lineage.data
}
cell.lines.data
length(quant.files)
cell.lines = lapply(lapply(data, function(x) x[1]), function(x) list(x)) # These are all the original cell lines
cell.lines
ncol(cell.lines.data)
ncol(cell.lines)
source('~/compbio/thesis/code/extract_lines.R')
source('~/compbio/thesis/code/extract_lines.R')
cell.lines
cell.lines[,20]
source('~/compbio/thesis/code/extract_division_events.R')
output.data
output.data[,"x"]
plot(output.data[, "t"], output.data[, "expr"])
hist(output.data[,"expr"], breaks=30, col = 1)
plot(density(output.data[,"expr"][!is.na(output.data[,"expr"])], kernel = "gaussian"), col = 1, lwd = lw.s)
hist(output.data[,"t"], breaks=30, col = 1)
hist(output.data[, "vol"], breaks=30)
cor(output.data[, "t"][!is.na(output.data[, "x"])], output.data[, "x"][!is.na(output.data[, "x"])])
plot(output.data[, "t"], output.data[, "expr"])
quant.files
source('~/compbio/thesis/code/extract_division_events.R')
output.data
quant.data
quant.data$Cell.id
plant.files
this.cell.index = quant.data$Cell.id[, time] %in% division.data[[ii]][1] #
this.cell.index
source('~/compbio/thesis/code/extract_division_events.R')
output.data
output.data[,"expr"]
plot(output.data[,"expr"])
